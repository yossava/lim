=begin
    Nicepay Ruby Bindings
    Virtual Account Sample Code
    Have a Nicepay!
=end

require 'nicepay'

# Configuration

# MID
Nicepay.iMid=('VACCTCLOSE')
# Merchant Key
Nicepay.merchantKey=('33F49GnCMS1mFYlGXisbUDzVf2ATWCl9k3R++d5hDd3Frmuos/XLx8XhXpe+LDYAbpGKZYSwtlyyLOtS/8aD7A==')
# Webhook/Notification Handler URL
Nicepay.dbProcessUrl=('http://marketplace-188545.nitrousapp.com/record')
# Redirection URL after customer made payment in Nicepay Payment Page
Nicepay.callBackUrl=('http://marketplace-188545.nitrousapp.com/record')

# API Operation
checkStatus = Nicepay::Api::CheckStatus.new(Nicepay.requestParam)

# Set Request Parameter for Check Status

# Merchant Id
Nicepay.setRequestParam('iMid', Nicepay.iMid)

# Reference Number / Order Number / Invoice Number, generated by merchant
Nicepay.setRequestParam('referenceNo','Invoice-7834')

# Total Amount
Nicepay.setRequestParam('amt', '3000')

# Set VA expiry date -> 2 days from now
Nicepay.setRequestParam('tXid', 'IONPAYTEST01201607010900547679')
# You can also set like this

# Merchant Token
Nicepay.setRequestParam('merchantToken', Nicepay.merchantTokenC)

# If you want to dump POST parameters and review it
# puts Nicepay.dumpParameters
# abort("Exit")

# Inspect Response
# puts requestVa.response.inspect

response = checkStatus.response

# Inspect response
# puts response.inspect

=begin
     **=========================================================================================================
     ** Credit Card
     **=========================================================================================================
     ** $paymentStatus->status == 0 // Success
     ** $paymentStatus->status == 1 // Failed
     ** $paymentStatus->status == 2 // Void or Refund
     ** $paymentStatus->status == 9 // Initialization or Unpaid
     **=========================================================================================================
     *
     **=========================================================================================================
     ** Virtual Account
     **=========================================================================================================
     ** $paymentStatus->status == 0 // Paid
     ** $paymentStatus->status == 3 // Unpaid
     ** $paymentStatus->status == 4 // Expired
     **=========================================================================================================
=end

# If success, show VA information to customer
if response["resultCd"].to_s == "0000"
    puts "\n"
    puts "----------------------------------------------------------------------"
    puts "Transaction Status     : " + response["status"].to_s
    puts "Amount                 : " + response["amt"].to_s
    puts "Reference No           : " + response["referenceNo"].to_s
    puts "Transaction ID         : " + response["tXid"].to_s
    puts "----------------------------------------------------------------------"

else
# If error, you can redirect back to checkout page
# In this sample, we only puts error message
    puts "\nOops! Check Status failed to generate! We have recorded the event. \nPlease try again later.\n\n"
    puts "Result Code    : " + response["resultCd"]
    puts "Result Message : " + response["resultMsg"]
end


# Flush request parameter
Nicepay.flushParam
