=begin
    Nicepay Ruby Bindings
    Virtual Account Sample Code
    Have a Nicepay!
=end

require 'nicepay'

# Configuration

Nicepay.iMid=('IONPAYTEST')
Nicepay.merchantKey=('33F49GnCMS1mFYlGXisbUDzVf2ATWCl9k3R++d5hDd3Frmuos/XLx8XhXpe+LDYAbpGKZYSwtlyyLOtS/8aD7A==')
Nicepay.dbProcessUrl=('http://marketplace-188545.nitrousapp.com/record')
Nicepay.callBackUrl=('http://example.com/')

# API Operation
chargeCard  = Nicepay::Api::ChargeCard.new(Nicepay.requestParam)

# Set Request Parameter for Card Payment

# Merchant Id
Nicepay.setRequestParam('iMid', Nicepay.iMid)

# Card -> payMethod = 01
Nicepay.setRequestParam('payMethod', '01')

# No Installment - Do not use installment feature before get rights from bank
Nicepay.setRequestParam('instmntMon', '1')
Nicepay.setRequestParam('instmntType', '1')

# Reference Number / Order Number / Invoice Number, generated by merchant
Nicepay.setRequestParam('referenceNo','Invoice-7833')

# Transaction Description
Nicepay.setRequestParam('description','Payment of ' + Nicepay.param('referenceNo')) # Description
Nicepay.setRequestParam('goodsNm', Nicepay.param('description')) # goodsNm = Description

# Add cart information mandatory at least one cart data
# Nicepay.addCart('image_location','product_name','product_description', 'sub_total_amount')
Nicepay.addCart('https://www.nicepay.co.id/nicepay/images/cart.png', 'Glasses', 'Jumlah: 3', 1000)
Nicepay.addCart('https://www.nicepay.co.id/nicepay/images/cart.png', 'Glasses', 'Jumlah: 1', 2000)
Nicepay.addCart('https://www.nicepay.co.id/nicepay/images/cart.png', 'Discount', 'Jumlah: 50%', -1500)
# Set cartData as request parameter
Nicepay.setRequestParam('cartData', Nicepay.cartData)
# Total Amount -> auto count from cartData
Nicepay.setRequestParam('amt', Nicepay.autoCountTotal)

# Currency -> Indonesian Rupiah
Nicepay.setRequestParam('currency', 'IDR')

# Set customer information
Nicepay.setRequestParam('billingNm', 'John Doe')
Nicepay.setRequestParam('billingPhone', '02112341234')
Nicepay.setRequestParam('billingEmail', 'john.doe@example.com')
Nicepay.setRequestParam('billingAddr', 'Jl. Jend Sudirman')
Nicepay.setRequestParam('billingCity', 'Jakarta Pusat')
Nicepay.setRequestParam('billingState', 'DKI Jakarta')
Nicepay.setRequestParam('billingPostCd', '10210')
Nicepay.setRequestParam('billingCountry', 'Indonesia')

Nicepay.setRequestParam('deliveryNm', 'John Doe')
Nicepay.setRequestParam('deliveryPhone', '02112341234')
Nicepay.setRequestParam('deliveryEmail', 'john.doe@example.com')
Nicepay.setRequestParam('deliveryAddr', 'Jl. Jend Sudirman')
Nicepay.setRequestParam('deliveryCity', 'Jakarta Pusat')
Nicepay.setRequestParam('deliveryState', 'DKI Jakarta')
Nicepay.setRequestParam('deliveryPostCd', '10210')
Nicepay.setRequestParam('deliveryCountry', 'Indonesia')

# Set User Customer IP
Nicepay.setRequestParam('userIP', Nicepay.userIp)

# Set dbProcessUrl (Notification Handler / Web Hook URL)
Nicepay.setRequestParam('dbProcessUrl', Nicepay.dbProcessUrl)

# Set callbackUrl (Redirection page after payment URL)
Nicepay.setRequestParam('callBackUrl', Nicepay.callBackUrl)

# Set vat, fee & noTaxAmt -> reserved for future feature, only set 0 for now
Nicepay.setRequestParam('vat', 0)
Nicepay.setRequestParam('fee', 0)
Nicepay.setRequestParam('notaxAmt', 0)

# Merchant Token
Nicepay.setRequestParam('merchantToken', Nicepay.merchantToken)

# If you want to dump POST parameters and review it
# puts Nicepay.dumpParameters
# abort("Exit")

# Inspect Response
# puts chargeCard.response.inspect

response = chargeCard.response

# Inspect response
# puts response

# If success, redirect to payment page
if response["resultCd"].to_s == "0000"
    puts "\n"
    puts "-----------------------------------------------------------------------------------------------------"
    puts "Redirect Customer to   : " + response["requestURL"].to_s + "?tXid=" + response["tXid"].to_s
    puts "tXid                   : " + response["tXid"].to_s # Save tXid in your database
    puts "-----------------------------------------------------------------------------------------------------"

else
# If error, you can redirect back to checkout page
# In this sample, we only puts error message
    puts "\nOops! Payment Page failed to generate! We have recorded the event. \nPlease try again later.\n\n"
    puts "Result Code    : " + response["resultCd"]
    puts "Result Message : " + response["resultMsg"]
end


# Flush request parameter
Nicepay.flushParam
